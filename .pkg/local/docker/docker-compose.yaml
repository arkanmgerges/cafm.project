version: "3.8"

services:
  cafm-project-server:
    image: cafm-project:local
    build:
      context: ../../..
      dockerfile: .pkg/local/docker/Dockerfile
    ports:
      - "9998:9999"
    entrypoint: ["hupper", "python", "-m", "src.port_adapter.api.grpc.server"]
    working_dir: /app
    env_file:
      - ../../../.env
    networks:
      - cafm-infra_default
    volumes:
      - ../../..:/app

  cafm-project-cmd:
    image: cafm-project:local
    entrypoint:
      [
        "hupper",
        "python",
        "-m",
        "src.port_adapter.messaging.listener.project_command.ProjectCommandListener",
      ]
    working_dir: /app
    env_file:
      - ../../../.env
    networks:
      - cafm-infra_default
    volumes:
      - ../../..:/app
    depends_on:
      - cafm-project-server

  cafm-project-identity-evt:
    image: cafm-project:local
    entrypoint:
      [
        "hupper",
        "python",
        "-m",
        "src.port_adapter.messaging.listener.identity_event.IdentityEventListener",
      ]
    working_dir: /app
    env_file:
      - ../../../.env
    networks:
      - cafm-infra_default
    volumes:
      - ../../..:/app
    depends_on:
      - cafm-project-server

  cafm-project-failed-cmd-handle:
    image: cafm-project:local
    entrypoint:
      [
        "hupper",
        "python",
        "-m",
        "src.port_adapter.messaging.listener.project_command.ProjectFailedCommandHandleListener",
      ]
    working_dir: /app
    env_file:
      - ../../../.env
    networks:
      - cafm-infra_default
    volumes:
      - ../../..:/app
    depends_on:
      - cafm-project-server

  cafm-project-identity-failed-evt-handle:
    image: cafm-project:local
    entrypoint:
      [
        "hupper",
        "python",
        "-m",
        "src.port_adapter.messaging.listener.identity_event.IdentityFailedEventHandleListener",
      ]
    working_dir: /app
    env_file:
      - ../../../.env
    networks:
      - cafm-infra_default
    volumes:
      - ../../..:/app
    depends_on:
      - cafm-project-server

  cafm-project-script:
    image: cafm-project:local
    command: >
      bash -c "python -m src.resource.script.admin_script check-schema-registry-readiness &&
      python -m src.resource.script.admin_script check-mysql-readiness &&
      python -m src.resource.script.admin_script init-kafka-topics-and-schemas &&
      python -m src.resource.script.admin_script init-db &&
      echo 'Provide version control to database' && python -m src.resource.db_migration.manage version_control &>/dev/null || echo 'Database has version control' &&
      python -m src.resource.db_migration.manage upgrade &&
      python -m src.resource.script.admin_script import-maxmind-data &&
      python -m src.resource.script.admin_script check-elasticsearch-readiness &&
      python -m src.resource.script.admin_script init-elasticsearch-indexes"
    working_dir: /app
    env_file:
      - ../../../.env
    networks:
      - cafm-infra_default
    volumes:
      - ../../..:/app
    depends_on:
      - cafm-project-server

networks:
  cafm-infra_default:
    external: true
