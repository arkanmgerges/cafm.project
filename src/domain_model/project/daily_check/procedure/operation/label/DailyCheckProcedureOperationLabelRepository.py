"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""
from abc import ABC, abstractmethod
from typing import List
from src.domain_model.project.daily_check.procedure.operation.label.DailyCheckProcedureOperationLabel import DailyCheckProcedureOperationLabel
from src.domain_model.token.TokenData import TokenData


class DailyCheckProcedureOperationLabelRepository(ABC):
    @abstractmethod
    def save(self, obj: DailyCheckProcedureOperationLabel, tokenData: TokenData = None):
        """Save daily check procedure operation label

        Args:
            obj (DailyCheckProcedureOperationLabel): The daily check procedure operation label that needs to be saved
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def deleteDailyCheckProcedureOperationLabel(self, obj: DailyCheckProcedureOperationLabel, tokenData: TokenData = None) -> None:
        """Delete a daily check procedure operation label

        Args:
            obj (DailyCheckProcedureOperationLabel): The daily check procedure operation label that needs to be deleted
            tokenData (TokenData): Token data used for deleting the daily check procedure operation label

        :raises:
            `ObjectCouldNotNotBeDeletedException
            <src.domain_model.resource.exception.ObjectCouldNotNotBeDeletedException>`
            Raise an exception if the daily check procedure operation label could not be deleted
        """

    @abstractmethod
    def bulkSave(self, objList: List[DailyCheckProcedureOperationLabel], tokenData: TokenData = None):
        """Bulk save daily check procedure operation label list

        Args:
            objList (List[DailyCheckProcedureOperationLabel]): The daily check procedure operation label list that needs to be saved
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def bulkDelete(self, objList: List[DailyCheckProcedureOperationLabel], tokenData: TokenData = None):
        """Bulk delete daily check procedure operation label list

        Args:
            objList (List[DailyCheckProcedureOperationLabel]): The daily check procedure operation label list that needs to be deleted
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def dailyCheckProcedureOperationLabelById(self, id: str) -> DailyCheckProcedureOperationLabel:
        """Get daily check procedure operation label by id

        Args:
            id (str): The id of the daily check procedure operation label

        Returns:
            DailyCheckProcedureOperationLabel: daily check procedure operation label object

        :raises:
            `DailyCheckProcedureOperationLabelDoesNotExistException <src.domain_model.resource.exception.DailyCheckProcedureOperationLabelDoesNotExistException>`
            Raise an exception if the daily check procedure operation label does not exist
        """

    @abstractmethod
    def dailyCheckProcedureOperationLabels(self, tokenData: TokenData = None, resultFrom: int = 0, resultSize: int = 100,
                 order: List[dict] = None) -> dict:
        """Get list of daily check procedure operation labels based on the owned roles that the user has

        Args:
            tokenData (TokenData): A token data object
            resultFrom (int): The start offset of the result item
            resultSize (int): The size of the items in the result
            order (List[dict]): A list of order e.g. [{'orderBy': 'name', 'direction': 'asc'},
                                {'orderBy': 'quantity', 'direction': 'desc'}]

        Returns:
            dict: A dict that has {"items": [], "totalItemCount": 0}
        """
