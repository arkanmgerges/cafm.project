"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""
from typing import List, Tuple
from src.domain_model.project.daily_check.procedure.operation.label.DailyCheckProcedureOperationLabel import DailyCheckProcedureOperationLabel
from src.domain_model.project.daily_check.procedure.operation.label.DailyCheckProcedureOperationLabelRepository import DailyCheckProcedureOperationLabelRepository
from src.domain_model.token.TokenData import TokenData
from src.resource.logging.decorator import debugLogger


class DailyCheckProcedureOperationLabelService:
    def __init__(self, repository: DailyCheckProcedureOperationLabelRepository):
        self._repo = repository

    @debugLogger
    def createDailyCheckProcedureOperationLabel(self, obj: DailyCheckProcedureOperationLabel, objectOnly: bool = False, tokenData: TokenData = None):
        if objectOnly:
            return DailyCheckProcedureOperationLabel.createFromObject(obj=obj, generateNewId=True) if obj.id() == '' else obj
        else:
            obj: DailyCheckProcedureOperationLabel = DailyCheckProcedureOperationLabel.createFromObject(obj=obj, publishEvent=True)
            self._repo.save(obj=obj)
            return obj

    @debugLogger
    def deleteDailyCheckProcedureOperationLabel(self, obj: DailyCheckProcedureOperationLabel, tokenData: TokenData = None):
        obj.publishDelete()
        self._repo.deleteDailyCheckProcedureOperationLabel(obj=obj)

    @debugLogger
    def updateDailyCheckProcedureOperationLabel(self, oldObject: DailyCheckProcedureOperationLabel, newObject: DailyCheckProcedureOperationLabel, tokenData: TokenData = None):
        newObject.publishUpdate(oldObject)
        self._repo.save(obj=newObject)

    @debugLogger
    def bulkCreate(self, objList: List[DailyCheckProcedureOperationLabel]):
        self._repo.bulkSave(objList=objList)
        for obj in objList:
            DailyCheckProcedureOperationLabel.createFromObject(obj=obj, publishEvent=True)

    @debugLogger
    def bulkDelete(self, objList: List[DailyCheckProcedureOperationLabel]):
        self._repo.bulkDelete(objList=objList)
        for obj in objList:
            obj.publishDelete()

    @debugLogger
    def bulkUpdate(self, objList: List[Tuple]):
        newObjList = list(map(lambda x: x[0], objList))
        self._repo.bulkSave(objList=newObjList)
        for obj in objList:
            newObj = obj[0]
            oldObj = obj[1]
            newObj.publishUpdate(oldObj)

    @debugLogger
    def dailyCheckProcedureOperationLabels(self, tokenData: TokenData = None, resultFrom: int = 0, resultSize: int = 100,
                      order: List[dict] = None):
        return self._repo.dailyCheckProcedureOperationLabels(tokenData=tokenData, resultFrom=resultFrom, resultSize=resultSize, order=order)
