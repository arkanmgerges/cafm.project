"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""
from typing import List
from src.domain_model.project.maintenance.procedure.operation.MaintenanceProcedureOperation import MaintenanceProcedureOperation
from src.domain_model.project.maintenance.procedure.operation.MaintenanceProcedureOperationRepository import MaintenanceProcedureOperationRepository
from src.domain_model.resource.exception.MaintenanceProcedureOperationAlreadyExistException import MaintenanceProcedureOperationAlreadyExistException
from src.domain_model.resource.exception.MaintenanceProcedureOperationDoesNotExistException import MaintenanceProcedureOperationDoesNotExistException
from src.domain_model.token.TokenData import TokenData
from src.resource.logging.decorator import debugLogger


class MaintenanceProcedureOperationService:
    def __init__(self, repository: MaintenanceProcedureOperationRepository):
        self._repo = repository

    @debugLogger
    def createMaintenanceProcedureOperation(self, obj: MaintenanceProcedureOperation, objectOnly: bool = False, tokenData: TokenData = None):
        try:
            if obj.id() == '':
                raise MaintenanceProcedureOperationDoesNotExistException()
            self._repo.maintenanceProcedureOperationById(id=obj.id())
            raise MaintenanceProcedureOperationAlreadyExistException(obj.id())
        except MaintenanceProcedureOperationDoesNotExistException:
            if objectOnly:
                return MaintenanceProcedureOperation.createFromObject(obj=obj, generateNewId=True) if obj.id() == '' else obj
            else:
                obj = MaintenanceProcedureOperation.createFromObject(obj=obj, publishEvent=True)
                return obj

    @debugLogger
    def deleteMaintenanceProcedureOperation(self, obj: MaintenanceProcedureOperation, tokenData: TokenData = None):
        obj.publishDelete()

    @debugLogger
    def updateMaintenanceProcedureOperation(self, oldObject: MaintenanceProcedureOperation, newObject: MaintenanceProcedureOperation, tokenData: TokenData = None):
        newObject.publishUpdate(oldObject)

    @debugLogger
    def maintenanceProcedureOperations(self, tokenData: TokenData = None, resultFrom: int = 0, resultSize: int = 100,
                      order: List[dict] = None):
        return self._repo.maintenanceProcedureOperations(tokenData=tokenData, resultFrom=resultFrom, resultSize=resultSize, order=order)
