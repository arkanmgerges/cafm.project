"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""
from abc import ABC, abstractmethod
from typing import List
from src.domain_model.standard_maintenance.procedure.StandardMaintenanceProcedure import (
    StandardMaintenanceProcedure,
)
from src.domain_model.token.TokenData import TokenData


class StandardMaintenanceProcedureRepository(ABC):
    @abstractmethod
    def bulkSave(self, objList: List[StandardMaintenanceProcedure], tokenData: TokenData = None):
        """Bulk save standard maintenance procedure list

        Args:
            objList (List[StandardMaintenanceProcedure]): The standard maintenance procedure list that needs to be saved
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def bulkDelete(self, objList: List[StandardMaintenanceProcedure], tokenData: TokenData = None):
        """Bulk delete standard maintenance procedure list

        Args:
            objList (List[StandardMaintenanceProcedure]): The standard maintenance procedure list that needs to be deleted
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def save(self, obj: StandardMaintenanceProcedure, tokenData: TokenData = None):
        """Save standard maintenance procedure

        Args:
            obj (StandardMaintenanceProcedure): The standard maintenance procedure that needs to be saved
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def deleteStandardMaintenanceProcedure(
        self, obj: StandardMaintenanceProcedure, tokenData: TokenData
    ) -> None:
        """Delete a standard maintenance procedure

        Args:
            obj (StandardMaintenanceProcedure): The standard maintenance procedure that needs to be deleted
            tokenData (TokenData): Token data used for deleting the standard maintenance procedure

        :raises:
            `ObjectCouldNotNotBeDeletedException
            <src.domain_model.resource.exception.ObjectCouldNotNotBeDeletedException>`
            Raise an exception if the standard maintenance procedure could not be deleted
        """

    @abstractmethod
    def standardMaintenanceProcedureById(self, id: str) -> StandardMaintenanceProcedure:
        """Get standard maintenance procedure by id

        Args:
            id (str): The id of the standard maintenance procedure

        Returns:
            StandardMaintenanceProcedure: standard maintenance procedure object

        :raises:
            `StandardMaintenanceProcedureDoesNotExistException <src.domain_model.resource.exception.StandardMaintenanceProcedureDoesNotExistException>`
            Raise an exception if the standard maintenance procedure does not exist
        """

    @abstractmethod
    def standardMaintenanceProcedures(
        self,
        tokenData: TokenData,
        resultFrom: int = 0,
        resultSize: int = 100,
        order: List[dict] = None,
    ) -> dict:
        """Get list of standard maintenance procedures based on the owned roles that the user has

        Args:
            tokenData (TokenData): A token data object
            resultFrom (int): The start offset of the result item
            resultSize (int): The size of the items in the result
            order (List[dict]): A list of order e.g. [{'orderBy': 'name', 'direction': 'asc'},
                                {'orderBy': 'quantity', 'direction': 'desc'}]

        Returns:
            dict: A dict that has {"items": [], "totalItemCount": 0}
        """

    @abstractmethod
    def standardMaintenanceProceduresByStandardEquipmentCategoryGroupId(
        self,
        tokenData: TokenData,
        standardEquipmentCategoryGroupId: str = "",
    ) -> dict:
        """Get list of standard maintenance procedures based on standardEquipmentCategoryGroupId

        Args:
            tokenData (TokenData): A token data object
            standardEquipmentCategoryGroupId (str): Standard equipment category for which to get the maintenance procedures
        Returns:
            dict: A dict that has {"items": []}
        """
