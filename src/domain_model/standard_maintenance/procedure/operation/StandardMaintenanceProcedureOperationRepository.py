"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""
from abc import ABC, abstractmethod
from typing import List
from src.domain_model.standard_maintenance.procedure.operation.StandardMaintenanceProcedureOperation import (
    StandardMaintenanceProcedureOperation,
)
from src.domain_model.token.TokenData import TokenData


class StandardMaintenanceProcedureOperationRepository(ABC):
    @abstractmethod
    def bulkSave(self, objList: List[StandardMaintenanceProcedureOperation], tokenData: TokenData = None):
        """Bulk save standard maintenance procedure operation list

        Args:
            objList (List[StandardMaintenanceProcedureOperation]): The standard maintenance procedure operation list that needs to be saved
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def bulkDelete(self, objList: List[StandardMaintenanceProcedureOperation], tokenData: TokenData = None):
        """Bulk delete standard maintenance procedure operation list

        Args:
            objList (List[StandardMaintenanceProcedureOperation]): The standard maintenance procedure operation list that needs to be deleted
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def save(self, obj: StandardMaintenanceProcedureOperation, tokenData: TokenData = None):
        """Save standard maintenance procedure operation

        Args:
            obj (StandardMaintenanceProcedureOperation): The standard maintenance procedure operation that needs to be saved
            tokenData (TokenData): Token data that has info about the token

        """

    @abstractmethod
    def deleteStandardMaintenanceProcedureOperation(
        self, obj: StandardMaintenanceProcedureOperation, tokenData: TokenData
    ) -> None:
        """Delete a standard maintenance procedure operation

        Args:
            obj (StandardMaintenanceProcedureOperation): The standard maintenance procedure operation that needs to be deleted
            tokenData (TokenData): Token data used for deleting the standard maintenance procedure operation

        :raises:
            `ObjectCouldNotNotBeDeletedException
            <src.domain_model.resource.exception.ObjectCouldNotNotBeDeletedException>`
            Raise an exception if the standard maintenance procedure operation could not be deleted
        """

    @abstractmethod
    def standardMaintenanceProcedureOperationById(
        self, id: str
    ) -> StandardMaintenanceProcedureOperation:
        """Get standard maintenance procedure operation by id

        Args:
            id (str): The id of the standard maintenance procedure operation

        Returns:
            StandardMaintenanceProcedureOperation: standard maintenance procedure operation object

        :raises:
            `StandardMaintenanceProcedureOperationDoesNotExistException <src.domain_model.resource.exception.StandardMaintenanceProcedureOperationDoesNotExistException>`
            Raise an exception if the standard maintenance procedure operation does not exist
        """

    @abstractmethod
    def standardMaintenanceProcedureOperations(
        self,
        tokenData: TokenData,
        resultFrom: int = 0,
        resultSize: int = 100,
        order: List[dict] = None,
    ) -> dict:
        """Get list of standard maintenance procedure operations based on the owned roles that the user has

        Args:
            tokenData (TokenData): A token data object
            resultFrom (int): The start offset of the result item
            resultSize (int): The size of the items in the result
            order (List[dict]): A list of order e.g. [{'orderBy': 'name', 'direction': 'asc'},
                                {'orderBy': 'quantity', 'direction': 'desc'}]

        Returns:
            dict: A dict that has {"items": [], "totalItemCount": 0}
        """

    @abstractmethod
    def standardMaintenanceProcedureOperationsByStandardMaintenanceProcedureId(
        self,
        tokenData: TokenData,
        standardMaintenanceProcedureId: str = None,
        resultFrom: int = 0,
        resultSize: int = 100,
        order: List[dict] = None,
    ) -> dict:
        """Get list of standard maintenance procedure operations by maintenance_procedure_operation id based on the owned roles that the user has

        Args:
            tokenData (TokenData): A token data object
            standardMaintenanceProcedureId (str): A standard maintenance procedure operation id
            resultFrom (int): The start offset of the result item
            resultSize (int): The size of the items in the result
            order (List[dict]): A list of order e.g. [{'orderBy': 'name', 'direction': 'asc'},
                                {'orderBy': 'quantity', 'direction': 'desc'}]

        Returns:
            dict: A dict that has {"items": [], "totalItemCount": 0}
        """
