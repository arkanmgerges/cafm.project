"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""


from datetime import datetime

from sqlalchemy import Column, Integer, String, ForeignKey
from sqlalchemy.sql.sqltypes import DateTime
from sqlalchemy.orm import relationship
import src.port_adapter.AppDi as AppDi
from src.port_adapter.repository.db_model.subcontractor__organization__junction import (
    associationTable,
)
from src.port_adapter.repository.db_model.SubcontractorCategory import (
    SubcontractorCategory,
)

Base = AppDi.instance.get(AppDi.DbBase)


class Subcontractor(Base):
    __tablename__ = "subcontractor"
    id = Column("id", String(40), primary_key=True)
    companyName = Column("company_name", String(50))
    websiteUrl = Column("website", String(50))
    contactPerson = Column("contact_person", String(255))
    email = Column("email", String(50))
    phoneNumber = Column("phone_number", String(30))
    addressOne = Column("address_one", String(255))
    addressTwo = Column("address_two", String(255), nullable=True)
    subcontractorCategoryId = Column(
        "subcontractor_category_id",
        String(40),
        ForeignKey("subcontractor_category.id", onupdate="CASCADE"),
        nullable=True,
    )
    description = Column("description", String(255))
    cityId = Column(
        "city_id",
        Integer,
        ForeignKey("city.geoname_id", onupdate="CASCADE"),
        nullable=True,
    )
    countryId = Column(
        "country_id",
        Integer,
        ForeignKey("country.geoname_id", onupdate="CASCADE"),
        nullable=True,
    )
    countryStateName = Column("subdivision_1_name", String(100))
    countryStateIsoCode = Column("subdivision_1_iso_code", String(15))
    postalCode = Column("postal_code", String(30), nullable=True)
    createdAt = Column("created_at", DateTime, nullable=True,
                       default=datetime.utcnow())
    modifiedAt = Column(
        "modified_at", DateTime, nullable=True, onupdate=datetime.utcnow()
    )

    # Relationship
    city = relationship("City", uselist=False)
    country = relationship("Country", uselist=False)
    organizations = relationship(
        "Organization", secondary=associationTable, back_populates="subcontractors"
    )

    subcontractorCategory = relationship(
        "SubcontractorCategory", back_populates="categorySubcontractors"
    )

    def __repr__(self):
        return f"[Repo DB Model] Subcontractor(id='{self.id}', \
                companyName='{self.companyName}', \
                websiteUrl='{self.websiteUrl}', \
                contactPerson='{self.contactPerson}', \
                email='{self.email}', \
                phoneNumber='{self.phoneNumber}', \
                addressOne='{self.addressOne}', \
                addressTwo='{self.addressTwo}', \
                subcontractorCategoryId='{self.subcontractorCategoryId}', \
                description='{self.description}', \
                cityId='{self.cityId}', \
                countryId='{self.countryId}', \
                postalCode='{self.postalCode}', \
                countryStateName='{self.countryStateName}', \
                countryStateIsoCode='{self.countryStateIsoCode}', \
            )"
