"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""



from elasticsearch_dsl import InnerDoc, Keyword, Nested, Float, Date, Integer
from src.port_adapter.repository.es_model.model.EsModelAttributeData import EsModelAttributeData
from src.resource.common.Util import Util
from src.port_adapter.repository.es_model.lookup.daily_check_procedure.DailyCheckProcedureOperationParameter import \
    DailyCheckProcedureOperationParameter

class DailyCheckProcedureOperation(InnerDoc):
    id = Keyword()
    name = Keyword()
    description = Keyword()
    type = Keyword()
    daily_check_procedure_operation_parameters = Nested(DailyCheckProcedureOperationParameter)

    @classmethod
    def attributeDataBySnakeCaseAttributeName(cls, instance: 'DailyCheckProcedureOperation' = None, snakeCaseAttributeName: str = None) -> EsModelAttributeData:
        # Remove any dots for nested objects, e.g. country.id should become country
        periodIndex = snakeCaseAttributeName.find('.')
        if periodIndex != -1:
            snakeCaseAttributeName = snakeCaseAttributeName[:periodIndex]
        mapping = {
            "id": EsModelAttributeData(attributeModelName='id', attributeRepoName='id', attributeRepoValue=getattr(instance, 'id', None)),
            "name": EsModelAttributeData(attributeModelName='name', attributeRepoName='name', attributeRepoValue=getattr(instance, 'name', None)),
            "description": EsModelAttributeData(attributeModelName='description', attributeRepoName='description', attributeRepoValue=getattr(instance, 'description', None)),
            "type": EsModelAttributeData(attributeModelName='type', attributeRepoName='type', attributeRepoValue=getattr(instance, 'type', None)),
            "daily_check_procedure_operation_parameters": EsModelAttributeData(attributeModelName='dailyCheckProcedureOperationParameters', attributeRepoName='daily_check_procedure_operation_parameters', attributeRepoValue=Util.deepAttribute(instance, 'daily_check_procedure_operation_parameters', None), dataType=DailyCheckProcedureOperationParameter, isClass=True),
        }

        return mapping[snakeCaseAttributeName] if snakeCaseAttributeName in mapping else None
