---

global:
  setting:
    tab_size: 4 # 4 spaces
  path:
    application: 'src/application'
    domain_model: 'src/domain_model'
    exception: 'src/domain_model/resource/exception'
    port_adapter: 'src/port_adapter'
    repository: 'src/port_adapter/repository'
    db_model: 'src/port_adapter/repository/db_model'
    messaging_listener: 'src/port_adapter/messaging/listener'
    grpc_api_listener: 'src/port_adapter/api/grpc/listener'
    proto_buffer: 'src/resource/proto'
    test: 'test'
    app_di: 'app_di'

domain_model:
  - model: &laptop_newone
      path: laptop/newone2
      name: laptop_very_good
      field:
        - name: name
          type: str
          default: None
          db:
            type: 'String(40)'
          proto:
            type: string
        - name: quantity
          type: int
          default: None
          db:
            type: 'Integer'
          proto:
            type: int32
  - model:
#     skip: [all, model, app_service, repository_impl, db_repository, listener, proto, grcp, test, app_di]
#     file_overwrite: True
#        #Overwrite the file even if it was modified manually, otherwise, the file will not be overwritten
      path: laptop
      name: laptop
      field:
        - name: name
#         foreign:
#             #Foreign can be used for example to add parameters to the application service, the repositories of this field
#             #then it will check if it exists by id, like in this example projectCategoryRepo.projectCategoryById(id=projectCategoryId).
#             #this will ensure that the project exist, otherwise an exception will be thrown by the repository
#            model:
#                name: project_category
#                path: project/category
          type: str
          default: None
          db:
            type: 'String(40)'
            extra: "ForeignKey('building.id'), nullable=False"
          proto:
            type: string
        - name: web_url
          type: str
#         foreign: *laptop_newone
#            #Also an anchor can be used
          default: None
          db:
            type: 'String(40)'
          proto:
            type: string
