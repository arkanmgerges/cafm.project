"""
The file is generated by scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""
{%set className= model.name | upperCamelCase%}
{%set domainModelClassName= model.domain_model.name | upperCamelCase%}
{%-set lowerCamelModelName= model.name | lowerCamelCase-%}
{%-set funcParams= model.field | mapFuncParams-%}
{%-set funcParamsWithDefaultNone= model.field | mapFuncParams(True)-%}
{%-set funcArgs= model.field | mapFuncArgs-%}
{%-set funcArgsByDict= model.field | mapFuncArgs('objListParamsItem', 'dictionary', '=', True)-%}
{%-set funcArgsLowerCase= model.field | mapFuncArgsLowerCase-%}
{%-set funcArgsLowerCaseWithSourceObject= model.field | mapFuncArgsLowerCase(None, None, '=', '_sourceObject')-%}
{%-set classNameWords= model.name | spacedWords%}
{%-set domainModelClassNameWords= model.domain_model.name | spacedWords%}
{%-set filePath= model.path | replace('/', '.')%}
{%-set domainModelFilePath= model.domain_model.path | replace('/', '.')%}
from abc import ABC, abstractmethod
from src.domain_model.{{ domainModelFilePath }}.{{ domainModelClassName }} import {{ domainModelClassName }}


class {{ className }}Repository(ABC):
    @abstractmethod
    def save(self, obj: {{ domainModelClassName }}):
        """Save {{ domainModelClassNameWords }}

        Args:
            obj ({{ domainModelClassName }}): The {{ domainModelClassNameWords }} that needs to be saved

        """
