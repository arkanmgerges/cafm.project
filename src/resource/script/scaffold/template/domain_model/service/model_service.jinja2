"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""
from typing import List
{%set className= model.name | upperCamelCase%}
{%-set modelImportPath= model.path | replace('/', '.')-%}
{%-set funcName= model.name | lowerCamelCase-%}
from src.domain_model.{{ modelImportPath }}.{{ className }} import {{ className }}
from src.domain_model.{{ modelImportPath }}.{{ className }}Repository import {{ className }}Repository
from src.domain_model.token.TokenData import TokenData
from src.resource.logging.decorator import debugLogger


class {{ className }}Service:
    def __init__(self, repository: {{ className }}Repository):
        self._repo = repository

    @debugLogger
    def create{{ className }}(self, obj: {{ className }}, objectOnly: bool = False, tokenData: TokenData = None):
        if objectOnly:
            return {{ className }}.createFromObject(obj=obj, generateNewId=True) if obj.id() == '' else obj
        else:
            obj = {{ className }}.createFromObject(obj=obj, publishEvent=True)
            self._repo.save(obj=obj)
            return obj

    @debugLogger
    def delete{{ className }}(self, obj: {{ className }}, tokenData: TokenData = None):
        obj.publishDelete()
        self._repo.delete{{ className }}(obj=obj)

    @debugLogger
    def update{{ className }}(self, oldObject: {{ className }}, newObject: {{ className }}, tokenData: TokenData = None):
        newObject.publishUpdate(oldObject)
        self._repo.save(obj=newObject)

    @debugLogger
    def {{ funcName | pluralize }}(self, tokenData: TokenData = None, resultFrom: int = 0, resultSize: int = 100,
                      order: List[dict] = None):
        return self._repo.{{ funcName | pluralize }}(tokenData=tokenData, resultFrom=resultFrom, resultSize=resultSize, order=order)

    {%-block modelByForeignModelId%}{%-endblock%}