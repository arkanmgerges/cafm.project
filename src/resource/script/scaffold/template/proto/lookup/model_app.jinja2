/*
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
*/

{%set className= model.name | upperCamelCase%}
{%-set lowerCamelModelName= model.name | lowerCamelCase-%}
{%-set funcParams= model.field | mapFuncParams-%}
{%-set funcArgs= model.field | mapFuncArgs-%}
{%-set funcArgsByObjDict= model.field | mapFuncArgs('obj', 'function', ':')-%}
{%-set funcArgsByDict= model.field | mapFuncArgs('dataDict', 'dictionary')-%}
{%-set funcArgsByDbObj= model.field | mapFuncArgs('dbObject')-%}
{%-set funcArgsByItem= model.field | mapFuncArgs('x')-%}
{%-set classNameWords= model.name | spacedWords%}
{%-set filePath= model.path | replace('/', '.')%}
{# this is a generated field by scaffold.py script #}
{%-set packagePath= model.package_path | replace('/', '.')%}
syntax = "proto3";

package cafm.project.{{ packagePath }};
import "{{ model.name }}.proto";
import "order.proto";
import "filter.proto";

message {{ className }}AppService_lookupRequest {
  int32 resultFrom = 1;
  int32 resultSize = 2;
  repeated cafm.common.order.Order orders = 4;
  repeated cafm.common.filter.Filter filters = 5;
}

message {{ className }}AppService_lookupResponse {
  repeated {{ className }} {{ model.domain_model.name | lowerCamelCase }}Lookups = 1;
  int32 totalItemCount = 2;
}

service {{ className }}AppService {
  rpc lookup ({{ className }}AppService_lookupRequest) returns ({{ className }}AppService_lookupResponse) {}
}
