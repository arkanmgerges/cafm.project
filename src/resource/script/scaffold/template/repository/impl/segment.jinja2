{% extends "./repository/impl/model_repository.jinja2" %}
{%set className= model.name | upperCamelCase%}
{%-set lowerCamelModelName= model.name | lowerCamelCase-%}
{%-set funcParams= model.field | mapFuncParams-%}
{%-set funcArgs= model.field | mapFuncArgs-%}
{%-set funcArgsByObjDict= model.field | mapFuncArgs('obj', 'function', ':')-%}
{%-set funcArgsByDict= model.field | mapFuncArgs('dataDict', 'dictionary')-%}
{%-set funcArgsByDbObj= model.field | mapFuncArgs('dbObject')-%}
{%-set funcArgsByItem= model.field | mapFuncArgs('x')-%}
{%-set classNameWords= model.name | spacedWords%}
{%-set filePath= model.path | replace('/', '.')%}
{%-block modelByForeignModelId %}
  {%- for segmentItem in segment %}
    {%- if model.name == segmentItem.name %}
      {%- if 'foreign' in segmentItem.proto %}
      {%-set foreignModelName = segmentItem.proto.foreign.model.name | upperCamelCase%}
      {%-set lowerForeignModelName = segmentItem.proto.foreign.model.name | lowerCamelCase%}

    @debugLogger
    def {{ lowerCamelModelName }}sBy{{foreignModelName}}Id(self, {{lowerForeignModelName}}Id: str = None, resultFrom: int = 0, resultSize: int = 100, order: List[dict] = None, tokenData: TokenData = None) -> dict:
        dbSession = DbSession.newSession(dbEngine=self._db)
        try:
            sortData = ''
            if order is not None:
                for item in order:
                    sortData = f'{sortData}, {item["orderBy"]} {item["direction"]}'
                sortData = sortData[2:]
            items = dbSession.query(Db{{ className }}).filter_by({{lowerForeignModelName}}Id={{lowerForeignModelName}}Id).order_by(text(sortData)).limit(resultSize).offset(resultFrom).all()
            itemsCount = dbSession.query(Db{{ className }}).filter_by({{lowerForeignModelName}}Id={{lowerForeignModelName}}Id).count()
            if items is None:
                return {"items": [], "itemCount": 0}
            return {"items": [{{ className }}.createFrom(id=x.id, {{ funcArgsByItemLowerCase }}) for x in items],
                    "itemCount": itemsCount}
        finally:
            dbSession.close()
      {%- endif %}
    {%- endif %}
  {%- endfor %}
{%-endblock%}