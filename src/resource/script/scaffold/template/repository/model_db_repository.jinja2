"""
The file is generated by a scaffold script
@author: Arkan M. Gerges<arkan.m.gerges@gmail.com>
"""

{%set className= model.name | upperCamelCase%}
{%-set lowerCamelModelName= model.name | lowerCamelCase-%}
{%-set funcParams= model.field | mapFuncParams-%}
{%-set funcArgs= model.field | mapFuncArgs-%}
{%-set funcArgsByObj= model.field | mapFuncArgs('obj', 'function')-%}
{%-set funcArgsByDbObj= model.field | mapFuncArgs('dbObject')-%}
{%-set funcArgsByItem= model.field | mapFuncArgs('x')-%}
{%-set classNameWords= model.name | spacedWords%}
{%-set filePath= model.path | replace('/', '.')%}

from datetime import datetime

from sqlalchemy import Column, Integer, String, Boolean, ForeignKey
from sqlalchemy.sql.sqltypes import DateTime

import src.port_adapter.AppDi as AppDi

Base = AppDi.instance.get(AppDi.DbBase)


class {{ className }}(Base):
    __tablename__ = '{{ model.name }}'
    id = Column('id', String(40), primary_key=True)
    {%- for field in model.field %}
    {%- if field.db.extra %}
    {{ field.name | lowerCamelCase }} = Column('{{ field.name }}', {{ field.db.type }}, {{ field.db.extra }})
    {%- else %}
    {{ field.name | lowerCamelCase }} = Column('{{ field.name }}', {{ field.db.type }})
    {%- endif %}
    {%- endfor %}
    createdAt = Column('created_at', DateTime, nullable=True, default=datetime.utcnow())
    modifiedAt = Column('modified_at', DateTime, nullable=True, onupdate=datetime.utcnow())


    def __repr__(self):
        return f"[Repo DB Model] {{ className }}(id='{self.id}', {% for field in model.field -%} {{ field.name | lowerCamelCase }}='{{'{'}}self.{{ field.name | lowerCamelCase }}{{ '}'}}', {% endfor -%})"
